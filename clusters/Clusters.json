{
  "swagger": "2.0",
  "info": {
    "description": "Azure Clusters documentation",
    "version": "2022-05-20",
    "title": "Azure Clusters"
  },
  "tags": [
    {
      "name": "node",
      "description": "Node-related operations"
    },
    {
      "name": "cluster",
      "description": "Cluster-related operations"
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureHPC/clusters/{name}": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "Gets the cluster definition",
        "operationId": "Clusters_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The cluster to query",
            "x-example": "CLUSTER_NAME"
          }
        ],
        "responses": {
          "200": {
            "description": "Cluster was returned",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "cluster"
        ],
        "summary": "Creates or updates the cluster definition",
        "operationId": "Clusters_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The cluster to query",
            "x-example": "CLUSTER_NAME"
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "The definition of the cluster",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was updated",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "201": {
            "description": "The cluster was created",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cluster"
        ],
        "summary": "Deletes the cluster if found",
        "operationId": "Clusters_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The cluster to query",
            "x-example": "CLUSTER_NAME"
          }
        ],
        "responses": {
          "200": {
            "description": "The cluster was deleted"
          },
          "204": {
            "description": "The cluster was not found"
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.AzureHPC/clusters/{clusterName}/nodes/{name}": {
      "get": {
        "tags": [
          "cluster"
        ],
        "summary": "Gets the node definition",
        "operationId": "Nodes_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "clusterName",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The cluster to query",
            "x-example": "CLUSTER_NAME"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The node to query",
            "x-example": "NODE_NAME"
          }
        ],
        "responses": {
          "200": {
            "description": "Node was returned",
            "schema": {
              "$ref": "#/definitions/Node"
            }
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "put": {
        "tags": [
          "cluster"
        ],
        "summary": "Adds a node to the cluster",
        "operationId": "Nodes_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "clusterName",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The cluster to query",
            "x-example": "CLUSTER_NAME"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The node to query",
            "x-example": "NODE_NAME"
          },
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "The properties of the node to add",
            "schema": {
              "$ref": "#/definitions/NodeProperties"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Node was updated",
            "schema": {
              "$ref": "#/definitions/Node"
            }
          },
          "201": {
            "description": "Node was created",
            "schema": {
              "$ref": "#/definitions/Node"
            }
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "cluster"
        ],
        "summary": "Deletes the node from a given cluster",
        "operationId": "Nodes_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The subscription ID to use",
            "x-example": "00000000-0000-0000-0000-000000000000"
          },
          {
            "name": "resourceGroup",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The resource group for the cluster",
            "x-example": "rg1"
          },
          {
            "name": "clusterName",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The node to query",
            "x-example": "CLUSTER_NAME"
          },
          {
            "name": "name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "The node to query",
            "x-example": "NODE_NAME"
          }
        ],
        "responses": {
          "200": {
            "description": "Node was deleted"
          },
          "204": {
            "description": "Node wasn't found"
          },
          "default": {
            "descirption": "Operation failed",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Cluster": {
      "type": "object",
      "description": "The identifiers, state, properties for a cluster",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the cluster."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group this cluster belongs to."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription this cluster belongs to."
        },
        "location": {
          "type": "string",
          "description": "The ARM region this cluster belongs to.",
          "example": "eastus"
        },
        "provisioningState": {
          "description": "The state of this cluster",
          "example": "Succeeded",
          "readOnly": true,
          "$ref": "#/definitions/ProvisioningState"
        },
        "properties": {
          "$ref": "#/definitions/ClusterProperties"
        }
      }
    },
    "ClusterProperties": {
      "type": "object",
      "description": "The properties of a cluster",
      "properties": {
        "tags": {
          "type": "object",
          "description": "Additional information about the cluster.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile"
        }
      }
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "$ref": "#/definitions/PublicNetworkAccess"
        },
        "nodeManagementAccess": {
          "$ref": "#/definitions/NodeNetworkAccessConfiguration"
        }
      }
    },
    "NodeNetworkAccessConfiguration": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "$ref": "#/definitions/NetworkRuleAction"
        },
        "ipRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpRule"
          }
        }
      }
    },
    "ProvisioningState": {
      "type": "string",
      "enum": [
        "Unknown",
        "Active",
        "Deleting",
        "Failed",
        "Creating",
        "Updating"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": false
      }
    },
    "NetworkRuleAction": {
      "type": "string",
      "enum": [
        "Unknown",
        "Allow",
        "Deny"
      ],
      "x-ms-enum": {
        "name": "NetworkRuleAction",
        "modelAsString": false
      }
    },
    "IpRule": {
      "properties": {
        "action": {
          "$ref": "#/definitions/NetworkRuleAction"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "enum": [
        "Unknown",
        "Enabled",
        "Disabled"
      ],
      "x-ms-enum": {
        "name": "PublicNetworkAccess",
        "modelAsString": false
      }
    },
    "CloudError": {
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody",
          "description": "Cloud error body."
        }
      },
      "description": "An error response from the service."
    },
    "CloudErrorBody": {
      "properties": {
        "code": {
          "type": "integer",
          "description": "An identifier for the error. Codes are invariant and are intended to be consumed programmatically."
        },
        "message": {
          "type": "string",
          "description": "A message describing the error, intended to be suitable for display in a user interface."
        },
        "target": {
          "type": "string",
          "description": "The target of the particular error. For example, the name of the property in error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "description": "A list of additional details about the error."
        }
      },
      "description": "An error response from the service."
    },
    "Node": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of this node."
        },
        "clusterName": {
          "type": "string",
          "description": "The name of the cluster this node is in."
        },
        "resourceGroup": {
          "type": "string",
          "description": "The resource group of the cluster this node belongs to."
        },
        "subscriptionId": {
          "type": "string",
          "description": "The subscription this cluster belongs to."
        },
        "properties": {
          "$ref": "#/definitions/NodeProperties",
          "description": "The properties of this node."
        }
      }
    },
    "NodeProperties": {
      "properties": {
        "virtualMachineProfile": {
          "$ref": "#/definitions/VirtualMachineProfile",
          "description": "Information on the underlying vm for this node."
        }
      }
    },
    "ImageReference": {
      "properties": {
        "publisher": {
          "type": "string"
        },
        "offer": {
          "type": "string"
        },
        "sku": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "AdminAccess": {
      "properties": {
        "userName": {
          "type": "string"
        },
        "publicKey": {
          "type": "string"
        }
      }
    },
    "ScaleSetType": {
      "type": "string",
      "enum": [
        "None",
        "Flex",
        "Uniform"
      ],
      "x-ms-enum": {
        "name": "ScaleSetType",
        "modelAsString": false
      }
    },
    "VirtualMachineProfile": {
      "properties": {
        "scalesetType": {
          "$ref": "#/definitions/ScaleSetType",
          "description": "The backing scale set type for this node."
        },
        "subnetId": {
          "type": "string",
          "description": "The id of the subnet this node belongs to."
        },
        "vmSize": {
          "type": "string",
          "description": "The vm skue backing this node."
        },
        "region": {
          "type": "string",
          "description": "The region this node was allocated in."
        },
        "imageReference": {
          "$ref": "#/definitions/ImageReference",
          "description": "A reference to the image this node uses."
        },
        "adminAccess": {
          "$ref": "#/definitions/AdminAccess",
          "description": "Configuration for accessing the node."
        },
        "cloudInit": {
          "type": "string",
          "description": "Initialization script run on node."
        },
        "tags": {
          "type": "object",
          "description": "Additional information about the virtual machine profile.",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  }
}
